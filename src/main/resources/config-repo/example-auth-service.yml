eureka:
  instance:
    hostname: EUREKA_HOSTNAME
  client:
    service-url:
      defaultZone: EUREKA_DEFAULT_ZONE

server:
  port: AUTH_PORT

spring:
  application:
    name: auth-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: AUTH_DB_ROUTE
    username: AUTH_DB_USER
    password: AUTH_DB_PASSWORD
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  kafka:
    bootstrap-servers: KAFKA_BOOTSTRAP_SERVERS
    properties:
      security.protocol: SSL
    producer:
      bootstrap-servers: KAFKA_PRODUCER_BOOTSTRAP_SERVERS
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: KAFKA_CONSUMER_BOOTSTRAP_SERVERS
      group-id: AUTH_KAFKA_GROUP_ID
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
    ssl:
      key-store-type: JKS
      trust-store-type: JKS
      protocol: TLSv1.3
      enabled.protocols: TLSv1.2,TLSv1.3
      trust-store-location: AUTH_KAFKA_TRUSTSTORE_ROUTE
      trust-store-password: KAFKA_TRUSTSTORE_CREDS
      key-store-location: AUTH_KAFKA_KEYSTORE_ROUTE
      key-store-password: KAFKA_KEYSTORE_CREDS
      key-password: KAFKA_KEY_CREDS
      endpoint:
        identification:
          algorithm: ""
      enabled:
        protocols: TLSv1.2,TLSv1.3

jwt:
  secret-key: JWT_SECRET
  expired-date: JWT_EXPIRED
  expired-date-refresh: JWT_EXPIRED_REFRESH

crypto:
  secret-key: CRYPTO_SECRET

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
      hibernate.type.descriptor.sql.BasicBinder: TRACE
    # Uncomment if Kafka logging is needed
    # org.apache.kafka: DEBUG
    # kafka: DEBUG
    # org.springframework.kafka: DEBUG
